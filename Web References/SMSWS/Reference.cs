//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.42000.
// 
#pragma warning disable 1591

namespace BigMac.SMSWS {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="MsgSenderSoap", Namespace="http://tempuri.org/SMSURL/MsgSender")]
    public partial class MsgSender : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback SendMessageOperationCompleted;
        
        private System.Threading.SendOrPostCallback SendEmailOperationCompleted;
        
        private System.Threading.SendOrPostCallback SendWatsappV1OperationCompleted;
        
        private System.Threading.SendOrPostCallback SendWatsappV1MultipleOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetMessageDetailsTextOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetMessageDetailsHTMLOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public MsgSender() {
            this.Url = global::BigMac.Properties.Settings.Default.BigMac_SMSWS_MsgSender;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event SendMessageCompletedEventHandler SendMessageCompleted;
        
        /// <remarks/>
        public event SendEmailCompletedEventHandler SendEmailCompleted;
        
        /// <remarks/>
        public event SendWatsappV1CompletedEventHandler SendWatsappV1Completed;
        
        /// <remarks/>
        public event SendWatsappV1MultipleCompletedEventHandler SendWatsappV1MultipleCompleted;
        
        /// <remarks/>
        public event GetMessageDetailsTextCompletedEventHandler GetMessageDetailsTextCompleted;
        
        /// <remarks/>
        public event GetMessageDetailsHTMLCompletedEventHandler GetMessageDetailsHTMLCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SMSURL/MsgSender/SendMessage", RequestNamespace="http://tempuri.org/SMSURL/MsgSender", ResponseNamespace="http://tempuri.org/SMSURL/MsgSender", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string SendMessage(string SourceCode, string Message) {
            object[] results = this.Invoke("SendMessage", new object[] {
                        SourceCode,
                        Message});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void SendMessageAsync(string SourceCode, string Message) {
            this.SendMessageAsync(SourceCode, Message, null);
        }
        
        /// <remarks/>
        public void SendMessageAsync(string SourceCode, string Message, object userState) {
            if ((this.SendMessageOperationCompleted == null)) {
                this.SendMessageOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSendMessageOperationCompleted);
            }
            this.InvokeAsync("SendMessage", new object[] {
                        SourceCode,
                        Message}, this.SendMessageOperationCompleted, userState);
        }
        
        private void OnSendMessageOperationCompleted(object arg) {
            if ((this.SendMessageCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SendMessageCompleted(this, new SendMessageCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SMSURL/MsgSender/SendEmail", RequestNamespace="http://tempuri.org/SMSURL/MsgSender", ResponseNamespace="http://tempuri.org/SMSURL/MsgSender", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string SendEmail(string MailTo, string MailCC, string MailBCC, string MailFrom, string MailSubject, string MailBody, string SourceID) {
            object[] results = this.Invoke("SendEmail", new object[] {
                        MailTo,
                        MailCC,
                        MailBCC,
                        MailFrom,
                        MailSubject,
                        MailBody,
                        SourceID});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void SendEmailAsync(string MailTo, string MailCC, string MailBCC, string MailFrom, string MailSubject, string MailBody, string SourceID) {
            this.SendEmailAsync(MailTo, MailCC, MailBCC, MailFrom, MailSubject, MailBody, SourceID, null);
        }
        
        /// <remarks/>
        public void SendEmailAsync(string MailTo, string MailCC, string MailBCC, string MailFrom, string MailSubject, string MailBody, string SourceID, object userState) {
            if ((this.SendEmailOperationCompleted == null)) {
                this.SendEmailOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSendEmailOperationCompleted);
            }
            this.InvokeAsync("SendEmail", new object[] {
                        MailTo,
                        MailCC,
                        MailBCC,
                        MailFrom,
                        MailSubject,
                        MailBody,
                        SourceID}, this.SendEmailOperationCompleted, userState);
        }
        
        private void OnSendEmailOperationCompleted(object arg) {
            if ((this.SendEmailCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SendEmailCompleted(this, new SendEmailCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SMSURL/MsgSender/SendWatsappV1", RequestNamespace="http://tempuri.org/SMSURL/MsgSender", ResponseNamespace="http://tempuri.org/SMSURL/MsgSender", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string SendWatsappV1(string SourceCode, string MobNo, string Msg) {
            object[] results = this.Invoke("SendWatsappV1", new object[] {
                        SourceCode,
                        MobNo,
                        Msg});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void SendWatsappV1Async(string SourceCode, string MobNo, string Msg) {
            this.SendWatsappV1Async(SourceCode, MobNo, Msg, null);
        }
        
        /// <remarks/>
        public void SendWatsappV1Async(string SourceCode, string MobNo, string Msg, object userState) {
            if ((this.SendWatsappV1OperationCompleted == null)) {
                this.SendWatsappV1OperationCompleted = new System.Threading.SendOrPostCallback(this.OnSendWatsappV1OperationCompleted);
            }
            this.InvokeAsync("SendWatsappV1", new object[] {
                        SourceCode,
                        MobNo,
                        Msg}, this.SendWatsappV1OperationCompleted, userState);
        }
        
        private void OnSendWatsappV1OperationCompleted(object arg) {
            if ((this.SendWatsappV1Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SendWatsappV1Completed(this, new SendWatsappV1CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SMSURL/MsgSender/SendWatsappV1Multiple", RequestNamespace="http://tempuri.org/SMSURL/MsgSender", ResponseNamespace="http://tempuri.org/SMSURL/MsgSender", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string SendWatsappV1Multiple(string SourceCode, string MultipleMsg) {
            object[] results = this.Invoke("SendWatsappV1Multiple", new object[] {
                        SourceCode,
                        MultipleMsg});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void SendWatsappV1MultipleAsync(string SourceCode, string MultipleMsg) {
            this.SendWatsappV1MultipleAsync(SourceCode, MultipleMsg, null);
        }
        
        /// <remarks/>
        public void SendWatsappV1MultipleAsync(string SourceCode, string MultipleMsg, object userState) {
            if ((this.SendWatsappV1MultipleOperationCompleted == null)) {
                this.SendWatsappV1MultipleOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSendWatsappV1MultipleOperationCompleted);
            }
            this.InvokeAsync("SendWatsappV1Multiple", new object[] {
                        SourceCode,
                        MultipleMsg}, this.SendWatsappV1MultipleOperationCompleted, userState);
        }
        
        private void OnSendWatsappV1MultipleOperationCompleted(object arg) {
            if ((this.SendWatsappV1MultipleCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SendWatsappV1MultipleCompleted(this, new SendWatsappV1MultipleCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SMSURL/MsgSender/GetMessageDetailsText", RequestNamespace="http://tempuri.org/SMSURL/MsgSender", ResponseNamespace="http://tempuri.org/SMSURL/MsgSender", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetMessageDetailsText(int CaseID) {
            object[] results = this.Invoke("GetMessageDetailsText", new object[] {
                        CaseID});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetMessageDetailsTextAsync(int CaseID) {
            this.GetMessageDetailsTextAsync(CaseID, null);
        }
        
        /// <remarks/>
        public void GetMessageDetailsTextAsync(int CaseID, object userState) {
            if ((this.GetMessageDetailsTextOperationCompleted == null)) {
                this.GetMessageDetailsTextOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetMessageDetailsTextOperationCompleted);
            }
            this.InvokeAsync("GetMessageDetailsText", new object[] {
                        CaseID}, this.GetMessageDetailsTextOperationCompleted, userState);
        }
        
        private void OnGetMessageDetailsTextOperationCompleted(object arg) {
            if ((this.GetMessageDetailsTextCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetMessageDetailsTextCompleted(this, new GetMessageDetailsTextCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SMSURL/MsgSender/GetMessageDetailsHTML", RequestNamespace="http://tempuri.org/SMSURL/MsgSender", ResponseNamespace="http://tempuri.org/SMSURL/MsgSender", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetMessageDetailsHTML(int CaseID) {
            object[] results = this.Invoke("GetMessageDetailsHTML", new object[] {
                        CaseID});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetMessageDetailsHTMLAsync(int CaseID) {
            this.GetMessageDetailsHTMLAsync(CaseID, null);
        }
        
        /// <remarks/>
        public void GetMessageDetailsHTMLAsync(int CaseID, object userState) {
            if ((this.GetMessageDetailsHTMLOperationCompleted == null)) {
                this.GetMessageDetailsHTMLOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetMessageDetailsHTMLOperationCompleted);
            }
            this.InvokeAsync("GetMessageDetailsHTML", new object[] {
                        CaseID}, this.GetMessageDetailsHTMLOperationCompleted, userState);
        }
        
        private void OnGetMessageDetailsHTMLOperationCompleted(object arg) {
            if ((this.GetMessageDetailsHTMLCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetMessageDetailsHTMLCompleted(this, new GetMessageDetailsHTMLCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void SendMessageCompletedEventHandler(object sender, SendMessageCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SendMessageCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SendMessageCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void SendEmailCompletedEventHandler(object sender, SendEmailCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SendEmailCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SendEmailCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void SendWatsappV1CompletedEventHandler(object sender, SendWatsappV1CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SendWatsappV1CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SendWatsappV1CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void SendWatsappV1MultipleCompletedEventHandler(object sender, SendWatsappV1MultipleCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SendWatsappV1MultipleCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SendWatsappV1MultipleCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void GetMessageDetailsTextCompletedEventHandler(object sender, GetMessageDetailsTextCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetMessageDetailsTextCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetMessageDetailsTextCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void GetMessageDetailsHTMLCompletedEventHandler(object sender, GetMessageDetailsHTMLCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetMessageDetailsHTMLCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetMessageDetailsHTMLCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591